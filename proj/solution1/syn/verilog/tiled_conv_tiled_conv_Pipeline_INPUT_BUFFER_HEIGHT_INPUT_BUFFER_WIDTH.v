// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tiled_conv_tiled_conv_Pipeline_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_fm_AWVALID,
        m_axi_fm_AWREADY,
        m_axi_fm_AWADDR,
        m_axi_fm_AWID,
        m_axi_fm_AWLEN,
        m_axi_fm_AWSIZE,
        m_axi_fm_AWBURST,
        m_axi_fm_AWLOCK,
        m_axi_fm_AWCACHE,
        m_axi_fm_AWPROT,
        m_axi_fm_AWQOS,
        m_axi_fm_AWREGION,
        m_axi_fm_AWUSER,
        m_axi_fm_WVALID,
        m_axi_fm_WREADY,
        m_axi_fm_WDATA,
        m_axi_fm_WSTRB,
        m_axi_fm_WLAST,
        m_axi_fm_WID,
        m_axi_fm_WUSER,
        m_axi_fm_ARVALID,
        m_axi_fm_ARREADY,
        m_axi_fm_ARADDR,
        m_axi_fm_ARID,
        m_axi_fm_ARLEN,
        m_axi_fm_ARSIZE,
        m_axi_fm_ARBURST,
        m_axi_fm_ARLOCK,
        m_axi_fm_ARCACHE,
        m_axi_fm_ARPROT,
        m_axi_fm_ARQOS,
        m_axi_fm_ARREGION,
        m_axi_fm_ARUSER,
        m_axi_fm_RVALID,
        m_axi_fm_RREADY,
        m_axi_fm_RDATA,
        m_axi_fm_RLAST,
        m_axi_fm_RID,
        m_axi_fm_RFIFONUM,
        m_axi_fm_RUSER,
        m_axi_fm_RRESP,
        m_axi_fm_BVALID,
        m_axi_fm_BREADY,
        m_axi_fm_BRESP,
        m_axi_fm_BID,
        m_axi_fm_BUSER,
        p_cast,
        trunc_ln2,
        conv_in_buf_V_0_address0,
        conv_in_buf_V_0_ce0,
        conv_in_buf_V_0_we0,
        conv_in_buf_V_0_d0,
        trunc_ln4,
        sext_ln39,
        input_feature_map
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_fm_AWVALID;
input   m_axi_fm_AWREADY;
output  [63:0] m_axi_fm_AWADDR;
output  [0:0] m_axi_fm_AWID;
output  [31:0] m_axi_fm_AWLEN;
output  [2:0] m_axi_fm_AWSIZE;
output  [1:0] m_axi_fm_AWBURST;
output  [1:0] m_axi_fm_AWLOCK;
output  [3:0] m_axi_fm_AWCACHE;
output  [2:0] m_axi_fm_AWPROT;
output  [3:0] m_axi_fm_AWQOS;
output  [3:0] m_axi_fm_AWREGION;
output  [0:0] m_axi_fm_AWUSER;
output   m_axi_fm_WVALID;
input   m_axi_fm_WREADY;
output  [15:0] m_axi_fm_WDATA;
output  [1:0] m_axi_fm_WSTRB;
output   m_axi_fm_WLAST;
output  [0:0] m_axi_fm_WID;
output  [0:0] m_axi_fm_WUSER;
output   m_axi_fm_ARVALID;
input   m_axi_fm_ARREADY;
output  [63:0] m_axi_fm_ARADDR;
output  [0:0] m_axi_fm_ARID;
output  [31:0] m_axi_fm_ARLEN;
output  [2:0] m_axi_fm_ARSIZE;
output  [1:0] m_axi_fm_ARBURST;
output  [1:0] m_axi_fm_ARLOCK;
output  [3:0] m_axi_fm_ARCACHE;
output  [2:0] m_axi_fm_ARPROT;
output  [3:0] m_axi_fm_ARQOS;
output  [3:0] m_axi_fm_ARREGION;
output  [0:0] m_axi_fm_ARUSER;
input   m_axi_fm_RVALID;
output   m_axi_fm_RREADY;
input  [15:0] m_axi_fm_RDATA;
input   m_axi_fm_RLAST;
input  [0:0] m_axi_fm_RID;
input  [9:0] m_axi_fm_RFIFONUM;
input  [0:0] m_axi_fm_RUSER;
input  [1:0] m_axi_fm_RRESP;
input   m_axi_fm_BVALID;
output   m_axi_fm_BREADY;
input  [1:0] m_axi_fm_BRESP;
input  [0:0] m_axi_fm_BID;
input  [0:0] m_axi_fm_BUSER;
input  [5:0] p_cast;
input  [2:0] trunc_ln2;
output  [6:0] conv_in_buf_V_0_address0;
output   conv_in_buf_V_0_ce0;
output   conv_in_buf_V_0_we0;
output  [15:0] conv_in_buf_V_0_d0;
input  [2:0] trunc_ln4;
input  [5:0] sext_ln39;
input  [63:0] input_feature_map;

reg ap_idle;
reg m_axi_fm_ARVALID;
reg m_axi_fm_RREADY;
reg conv_in_buf_V_0_ce0;
reg conv_in_buf_V_0_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln39_reg_503;
reg   [0:0] icmp_ln39_reg_503_pp0_iter1_reg;
reg   [0:0] tmp_reg_523;
reg   [0:0] tmp_reg_523_pp0_iter1_reg;
reg    ap_predicate_op86_readreq_state3;
reg    ap_block_state3_io;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
reg   [0:0] icmp_ln39_reg_503_pp0_iter8_reg;
reg   [0:0] tmp_reg_523_pp0_iter8_reg;
reg    ap_predicate_op93_read_state10;
reg    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln39_fu_241_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fm_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    fm_blk_n_R;
reg    ap_block_pp0_stage0_11001;
wire  signed [6:0] sext_ln39_cast_fu_176_p1;
reg  signed [6:0] sext_ln39_cast_reg_498;
reg   [0:0] icmp_ln39_reg_503_pp0_iter2_reg;
reg   [0:0] icmp_ln39_reg_503_pp0_iter3_reg;
reg   [0:0] icmp_ln39_reg_503_pp0_iter4_reg;
reg   [0:0] icmp_ln39_reg_503_pp0_iter5_reg;
reg   [0:0] icmp_ln39_reg_503_pp0_iter6_reg;
reg   [0:0] icmp_ln39_reg_503_pp0_iter7_reg;
reg   [0:0] icmp_ln39_reg_503_pp0_iter9_reg;
wire   [3:0] select_ln39_fu_268_p3;
reg   [3:0] select_ln39_reg_507;
wire   [3:0] select_ln39_1_fu_276_p3;
reg   [3:0] select_ln39_1_reg_512;
wire   [12:0] select_ln39_2_fu_320_p3;
reg   [12:0] select_ln39_2_reg_518;
wire   [0:0] tmp_fu_354_p3;
reg   [0:0] tmp_reg_523_pp0_iter2_reg;
reg   [0:0] tmp_reg_523_pp0_iter3_reg;
reg   [0:0] tmp_reg_523_pp0_iter4_reg;
reg   [0:0] tmp_reg_523_pp0_iter5_reg;
reg   [0:0] tmp_reg_523_pp0_iter6_reg;
reg   [0:0] tmp_reg_523_pp0_iter7_reg;
reg   [0:0] tmp_reg_523_pp0_iter9_reg;
reg   [6:0] conv_in_buf_V_0_addr_reg_527;
reg   [6:0] conv_in_buf_V_0_addr_reg_527_pp0_iter2_reg;
reg   [6:0] conv_in_buf_V_0_addr_reg_527_pp0_iter3_reg;
reg   [6:0] conv_in_buf_V_0_addr_reg_527_pp0_iter4_reg;
reg   [6:0] conv_in_buf_V_0_addr_reg_527_pp0_iter5_reg;
reg   [6:0] conv_in_buf_V_0_addr_reg_527_pp0_iter6_reg;
reg   [6:0] conv_in_buf_V_0_addr_reg_527_pp0_iter7_reg;
reg   [6:0] conv_in_buf_V_0_addr_reg_527_pp0_iter8_reg;
reg   [6:0] conv_in_buf_V_0_addr_reg_527_pp0_iter9_reg;
reg   [63:0] fm_addr_reg_532;
reg   [15:0] fm_addr_read_reg_538;
reg   [15:0] ap_phi_mux_storemerge_phi_fu_168_p4;
reg   [15:0] ap_phi_reg_pp0_iter10_storemerge_reg_164;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge_reg_164;
reg   [15:0] ap_phi_reg_pp0_iter1_storemerge_reg_164;
reg   [15:0] ap_phi_reg_pp0_iter2_storemerge_reg_164;
reg   [15:0] ap_phi_reg_pp0_iter3_storemerge_reg_164;
reg   [15:0] ap_phi_reg_pp0_iter4_storemerge_reg_164;
reg   [15:0] ap_phi_reg_pp0_iter5_storemerge_reg_164;
reg   [15:0] ap_phi_reg_pp0_iter6_storemerge_reg_164;
reg   [15:0] ap_phi_reg_pp0_iter7_storemerge_reg_164;
reg   [15:0] ap_phi_reg_pp0_iter8_storemerge_reg_164;
reg   [15:0] ap_phi_reg_pp0_iter9_storemerge_reg_164;
wire   [63:0] zext_ln49_2_fu_419_p1;
wire  signed [63:0] sext_ln49_fu_462_p1;
reg   [3:0] j_fu_98;
wire   [3:0] add_ln43_fu_362_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_1_fu_102;
reg   [3:0] ap_sig_allocacmp_i;
reg   [6:0] indvar_flatten_fu_106;
wire   [6:0] add_ln39_2_fu_247_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [6:0] zext_ln39_fu_205_p1;
wire  signed [6:0] p_cast_cast_fu_180_p1;
wire   [6:0] add_ln41_fu_209_p2;
wire   [9:0] shl_ln49_1_fu_223_p3;
wire   [12:0] shl_ln1_fu_215_p3;
wire  signed [12:0] sext_ln49_1_fu_231_p1;
wire   [0:0] icmp_ln43_fu_262_p2;
wire   [3:0] add_ln39_fu_256_p2;
wire   [6:0] zext_ln39_1_fu_284_p1;
wire   [6:0] add_ln41_1_fu_288_p2;
wire   [9:0] shl_ln49_1_mid1_fu_302_p3;
wire   [12:0] shl_ln49_mid1_fu_294_p3;
wire  signed [12:0] sext_ln49_2_fu_310_p1;
wire   [12:0] sub_ln49_1_fu_314_p2;
wire   [12:0] sub_ln49_fu_235_p2;
wire   [2:0] trunc_ln39_fu_328_p1;
wire   [2:0] trunc_ln45_fu_338_p1;
wire   [2:0] add_ln46_fu_342_p2;
wire   [2:0] add_ln39_1_fu_332_p2;
wire   [2:0] or_ln46_fu_348_p2;
wire   [4:0] tmp_10_fu_390_p3;
wire   [6:0] tmp_9_fu_383_p3;
wire   [6:0] zext_ln49_fu_397_p1;
wire   [6:0] add_ln49_3_fu_401_p2;
wire   [6:0] zext_ln49_1_fu_410_p1;
wire   [6:0] add_ln49_4_fu_413_p2;
wire   [6:0] add_ln49_fu_424_p2;
wire   [7:0] tmp_11_fu_429_p3;
wire  signed [63:0] sext_ln49_3_fu_437_p1;
wire   [63:0] add_ln49_2_fu_441_p2;
wire  signed [63:0] sext_ln39_1_fu_407_p1;
wire   [63:0] add_ln49_1_fu_446_p2;
wire   [62:0] trunc_ln5_fu_452_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_281;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_done_reg = 1'b0;
end

tiled_conv_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_281)) begin
        if (((tmp_fu_354_p3 == 1'd1) & (icmp_ln39_fu_241_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_164 <= 16'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_164 <= ap_phi_reg_pp0_iter0_storemerge_reg_164;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln39_fu_241_p2 == 1'd0))) begin
            i_1_fu_102 <= select_ln39_1_fu_276_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_102 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln39_fu_241_p2 == 1'd0))) begin
            indvar_flatten_fu_106 <= add_ln39_2_fu_247_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_106 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln39_fu_241_p2 == 1'd0))) begin
            j_fu_98 <= add_ln43_fu_362_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_98 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln39_reg_503 <= icmp_ln39_fu_241_p2;
        icmp_ln39_reg_503_pp0_iter1_reg <= icmp_ln39_reg_503;
        sext_ln39_cast_reg_498 <= sext_ln39_cast_fu_176_p1;
        tmp_reg_523_pp0_iter1_reg <= tmp_reg_523;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        conv_in_buf_V_0_addr_reg_527_pp0_iter2_reg <= conv_in_buf_V_0_addr_reg_527;
        conv_in_buf_V_0_addr_reg_527_pp0_iter3_reg <= conv_in_buf_V_0_addr_reg_527_pp0_iter2_reg;
        conv_in_buf_V_0_addr_reg_527_pp0_iter4_reg <= conv_in_buf_V_0_addr_reg_527_pp0_iter3_reg;
        conv_in_buf_V_0_addr_reg_527_pp0_iter5_reg <= conv_in_buf_V_0_addr_reg_527_pp0_iter4_reg;
        conv_in_buf_V_0_addr_reg_527_pp0_iter6_reg <= conv_in_buf_V_0_addr_reg_527_pp0_iter5_reg;
        conv_in_buf_V_0_addr_reg_527_pp0_iter7_reg <= conv_in_buf_V_0_addr_reg_527_pp0_iter6_reg;
        conv_in_buf_V_0_addr_reg_527_pp0_iter8_reg <= conv_in_buf_V_0_addr_reg_527_pp0_iter7_reg;
        conv_in_buf_V_0_addr_reg_527_pp0_iter9_reg <= conv_in_buf_V_0_addr_reg_527_pp0_iter8_reg;
        icmp_ln39_reg_503_pp0_iter2_reg <= icmp_ln39_reg_503_pp0_iter1_reg;
        icmp_ln39_reg_503_pp0_iter3_reg <= icmp_ln39_reg_503_pp0_iter2_reg;
        icmp_ln39_reg_503_pp0_iter4_reg <= icmp_ln39_reg_503_pp0_iter3_reg;
        icmp_ln39_reg_503_pp0_iter5_reg <= icmp_ln39_reg_503_pp0_iter4_reg;
        icmp_ln39_reg_503_pp0_iter6_reg <= icmp_ln39_reg_503_pp0_iter5_reg;
        icmp_ln39_reg_503_pp0_iter7_reg <= icmp_ln39_reg_503_pp0_iter6_reg;
        icmp_ln39_reg_503_pp0_iter8_reg <= icmp_ln39_reg_503_pp0_iter7_reg;
        icmp_ln39_reg_503_pp0_iter9_reg <= icmp_ln39_reg_503_pp0_iter8_reg;
        tmp_reg_523_pp0_iter2_reg <= tmp_reg_523_pp0_iter1_reg;
        tmp_reg_523_pp0_iter3_reg <= tmp_reg_523_pp0_iter2_reg;
        tmp_reg_523_pp0_iter4_reg <= tmp_reg_523_pp0_iter3_reg;
        tmp_reg_523_pp0_iter5_reg <= tmp_reg_523_pp0_iter4_reg;
        tmp_reg_523_pp0_iter6_reg <= tmp_reg_523_pp0_iter5_reg;
        tmp_reg_523_pp0_iter7_reg <= tmp_reg_523_pp0_iter6_reg;
        tmp_reg_523_pp0_iter8_reg <= tmp_reg_523_pp0_iter7_reg;
        tmp_reg_523_pp0_iter9_reg <= tmp_reg_523_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_storemerge_reg_164 <= ap_phi_reg_pp0_iter9_storemerge_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_storemerge_reg_164 <= ap_phi_reg_pp0_iter1_storemerge_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_storemerge_reg_164 <= ap_phi_reg_pp0_iter2_storemerge_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_storemerge_reg_164 <= ap_phi_reg_pp0_iter3_storemerge_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_storemerge_reg_164 <= ap_phi_reg_pp0_iter4_storemerge_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_storemerge_reg_164 <= ap_phi_reg_pp0_iter5_storemerge_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_storemerge_reg_164 <= ap_phi_reg_pp0_iter6_storemerge_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_storemerge_reg_164 <= ap_phi_reg_pp0_iter7_storemerge_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_storemerge_reg_164 <= ap_phi_reg_pp0_iter8_storemerge_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln39_reg_503 == 1'd0))) begin
        conv_in_buf_V_0_addr_reg_527 <= zext_ln49_2_fu_419_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op93_read_state10 == 1'b1))) begin
        fm_addr_read_reg_538 <= m_axi_fm_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_523 == 1'd0) & (icmp_ln39_reg_503 == 1'd0))) begin
        fm_addr_reg_532 <= sext_ln49_fu_462_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln39_fu_241_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln39_1_reg_512 <= select_ln39_1_fu_276_p3;
        select_ln39_2_reg_518[12 : 3] <= select_ln39_2_fu_320_p3[12 : 3];
        select_ln39_reg_507 <= select_ln39_fu_268_p3;
        tmp_reg_523 <= or_ln46_fu_348_p2[32'd2];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln39_fu_241_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_523_pp0_iter9_reg == 1'd0) & (icmp_ln39_reg_503_pp0_iter9_reg == 1'd0))) begin
        ap_phi_mux_storemerge_phi_fu_168_p4 = fm_addr_read_reg_538;
    end else begin
        ap_phi_mux_storemerge_phi_fu_168_p4 = ap_phi_reg_pp0_iter10_storemerge_reg_164;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i = 4'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_102;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_106;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_98;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_0_ce0 = 1'b1;
    end else begin
        conv_in_buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_0_we0 = 1'b1;
    end else begin
        conv_in_buf_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op86_readreq_state3 == 1'b1))) begin
        fm_blk_n_AR = m_axi_fm_ARREADY;
    end else begin
        fm_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op93_read_state10 == 1'b1))) begin
        fm_blk_n_R = m_axi_fm_RVALID;
    end else begin
        fm_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op86_readreq_state3 == 1'b1))) begin
        m_axi_fm_ARVALID = 1'b1;
    end else begin
        m_axi_fm_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op93_read_state10 == 1'b1))) begin
        m_axi_fm_RREADY = 1'b1;
    end else begin
        m_axi_fm_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln39_1_fu_332_p2 = (trunc_ln39_fu_328_p1 + trunc_ln2);

assign add_ln39_2_fu_247_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln39_fu_256_p2 = (ap_sig_allocacmp_i + 4'd1);

assign add_ln41_1_fu_288_p2 = ($signed(zext_ln39_1_fu_284_p1) + $signed(p_cast_cast_fu_180_p1));

assign add_ln41_fu_209_p2 = ($signed(zext_ln39_fu_205_p1) + $signed(p_cast_cast_fu_180_p1));

assign add_ln43_fu_362_p2 = (select_ln39_fu_268_p3 + 4'd1);

assign add_ln46_fu_342_p2 = (trunc_ln45_fu_338_p1 + trunc_ln4);

assign add_ln49_1_fu_446_p2 = ($signed(add_ln49_2_fu_441_p2) + $signed(sext_ln39_1_fu_407_p1));

assign add_ln49_2_fu_441_p2 = ($signed(sext_ln49_3_fu_437_p1) + $signed(input_feature_map));

assign add_ln49_3_fu_401_p2 = (tmp_9_fu_383_p3 + zext_ln49_fu_397_p1);

assign add_ln49_4_fu_413_p2 = (add_ln49_3_fu_401_p2 + zext_ln49_1_fu_410_p1);

assign add_ln49_fu_424_p2 = ($signed(zext_ln49_1_fu_410_p1) + $signed(sext_ln39_cast_reg_498));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_fm_RVALID == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (ap_predicate_op93_read_state10 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_fm_RVALID == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (ap_predicate_op93_read_state10 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter9 = ((m_axi_fm_RVALID == 1'b0) & (ap_predicate_op93_read_state10 == 1'b1));
end

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((m_axi_fm_ARREADY == 1'b0) & (ap_predicate_op86_readreq_state3 == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_281 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_storemerge_reg_164 = 'bx;

always @ (*) begin
    ap_predicate_op86_readreq_state3 = ((tmp_reg_523_pp0_iter1_reg == 1'd0) & (icmp_ln39_reg_503_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op93_read_state10 = ((tmp_reg_523_pp0_iter8_reg == 1'd0) & (icmp_ln39_reg_503_pp0_iter8_reg == 1'd0));
end

assign conv_in_buf_V_0_address0 = conv_in_buf_V_0_addr_reg_527_pp0_iter9_reg;

assign conv_in_buf_V_0_d0 = ap_phi_mux_storemerge_phi_fu_168_p4;

assign icmp_ln39_fu_241_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_262_p2 = ((ap_sig_allocacmp_j_load == 4'd10) ? 1'b1 : 1'b0);

assign m_axi_fm_ARADDR = fm_addr_reg_532;

assign m_axi_fm_ARBURST = 2'd0;

assign m_axi_fm_ARCACHE = 4'd0;

assign m_axi_fm_ARID = 1'd0;

assign m_axi_fm_ARLEN = 32'd1;

assign m_axi_fm_ARLOCK = 2'd0;

assign m_axi_fm_ARPROT = 3'd0;

assign m_axi_fm_ARQOS = 4'd0;

assign m_axi_fm_ARREGION = 4'd0;

assign m_axi_fm_ARSIZE = 3'd0;

assign m_axi_fm_ARUSER = 1'd0;

assign m_axi_fm_AWADDR = 64'd0;

assign m_axi_fm_AWBURST = 2'd0;

assign m_axi_fm_AWCACHE = 4'd0;

assign m_axi_fm_AWID = 1'd0;

assign m_axi_fm_AWLEN = 32'd0;

assign m_axi_fm_AWLOCK = 2'd0;

assign m_axi_fm_AWPROT = 3'd0;

assign m_axi_fm_AWQOS = 4'd0;

assign m_axi_fm_AWREGION = 4'd0;

assign m_axi_fm_AWSIZE = 3'd0;

assign m_axi_fm_AWUSER = 1'd0;

assign m_axi_fm_AWVALID = 1'b0;

assign m_axi_fm_BREADY = 1'b0;

assign m_axi_fm_WDATA = 16'd0;

assign m_axi_fm_WID = 1'd0;

assign m_axi_fm_WLAST = 1'b0;

assign m_axi_fm_WSTRB = 2'd0;

assign m_axi_fm_WUSER = 1'd0;

assign m_axi_fm_WVALID = 1'b0;

assign or_ln46_fu_348_p2 = (add_ln46_fu_342_p2 | add_ln39_1_fu_332_p2);

assign p_cast_cast_fu_180_p1 = $signed(p_cast);

assign select_ln39_1_fu_276_p3 = ((icmp_ln43_fu_262_p2[0:0] == 1'b1) ? add_ln39_fu_256_p2 : ap_sig_allocacmp_i);

assign select_ln39_2_fu_320_p3 = ((icmp_ln43_fu_262_p2[0:0] == 1'b1) ? sub_ln49_1_fu_314_p2 : sub_ln49_fu_235_p2);

assign select_ln39_fu_268_p3 = ((icmp_ln43_fu_262_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign sext_ln39_1_fu_407_p1 = $signed(select_ln39_2_reg_518);

assign sext_ln39_cast_fu_176_p1 = $signed(sext_ln39);

assign sext_ln49_1_fu_231_p1 = $signed(shl_ln49_1_fu_223_p3);

assign sext_ln49_2_fu_310_p1 = $signed(shl_ln49_1_mid1_fu_302_p3);

assign sext_ln49_3_fu_437_p1 = $signed(tmp_11_fu_429_p3);

assign sext_ln49_fu_462_p1 = $signed(trunc_ln5_fu_452_p4);

assign shl_ln1_fu_215_p3 = {{add_ln41_fu_209_p2}, {6'd0}};

assign shl_ln49_1_fu_223_p3 = {{add_ln41_fu_209_p2}, {3'd0}};

assign shl_ln49_1_mid1_fu_302_p3 = {{add_ln41_1_fu_288_p2}, {3'd0}};

assign shl_ln49_mid1_fu_294_p3 = {{add_ln41_1_fu_288_p2}, {6'd0}};

assign sub_ln49_1_fu_314_p2 = ($signed(shl_ln49_mid1_fu_294_p3) - $signed(sext_ln49_2_fu_310_p1));

assign sub_ln49_fu_235_p2 = ($signed(shl_ln1_fu_215_p3) - $signed(sext_ln49_1_fu_231_p1));

assign tmp_10_fu_390_p3 = {{select_ln39_1_reg_512}, {1'd0}};

assign tmp_11_fu_429_p3 = {{add_ln49_fu_424_p2}, {1'd0}};

assign tmp_9_fu_383_p3 = {{select_ln39_1_reg_512}, {3'd0}};

assign tmp_fu_354_p3 = or_ln46_fu_348_p2[32'd2];

assign trunc_ln39_fu_328_p1 = select_ln39_1_fu_276_p3[2:0];

assign trunc_ln45_fu_338_p1 = select_ln39_fu_268_p3[2:0];

assign trunc_ln5_fu_452_p4 = {{add_ln49_1_fu_446_p2[63:1]}};

assign zext_ln39_1_fu_284_p1 = add_ln39_fu_256_p2;

assign zext_ln39_fu_205_p1 = ap_sig_allocacmp_i;

assign zext_ln49_1_fu_410_p1 = select_ln39_reg_507;

assign zext_ln49_2_fu_419_p1 = add_ln49_4_fu_413_p2;

assign zext_ln49_fu_397_p1 = tmp_10_fu_390_p3;

always @ (posedge ap_clk) begin
    select_ln39_2_reg_518[2:0] <= 3'b000;
end

endmodule //tiled_conv_tiled_conv_Pipeline_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH
